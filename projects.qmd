---
title: "Model"
format:
  html:
    code-fold: true
---

```{r}
library(reticulate)
```

```{python}
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
import duckdb
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
```

```{python}
import duckdb
import pandas as pd
from palmerpenguins import load_penguins

# Load the penguins DataFrame using the load_penguins function
penguins_df = load_penguins()

# Create a DuckDB connection
con = duckdb.connect(database=':memory:', read_only=False)

# Register the DataFrame as a DuckDB table
con.register('penguins_table', penguins_df)

# Query the table and drop NA values
df = con.execute("SELECT * FROM penguins_table").fetchdf().dropna()

# Display the first few rows of the DataFrame
df.head(3)

```

```{python}
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']

model = LinearRegression().fit(X, y)
```

```{python}
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
```

```{python}
#from vetiver import VetiverModel
#v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
```

```{python}
#from pins import board_folder
#from vetiver import vetiver_pin_write

#model_board = board_folder("/data/model", allow_pickle_read = True)
#vetiver_pin_write(model_board, v)
#from vetiver import VetiverAPI
#app = VetiverAPI(v, check_prototype = True)
```

```{python}
con.close()
```